esphome:
  name: aire-acondicionado
  friendly_name: Aire Acondicionado
  platform: ESP8266
  board: d1_mini

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api-key
  reboot_timeout: 10min

# OTA & WiFi config
ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

remote_transmitter:
  pin: GPIO0
  carrier_duty_percent: 50%
  id: transmisor

remote_receiver:
  id: rcvr
  pin:
    number: GPIO2
    inverted: true
  dump: haier

globals:
  - id: val_byte1
    type: int
    restore_value: no
    initial_value: "166"

  - id: val_byte2
    type: int
    restore_value: no
    initial_value: "124"

  - id: val_byte3
    type: int
    restore_value: no
    initial_value: "0"

  - id: val_byte5
    type: int
    restore_value: no
    initial_value: "64"

  - id: val_byte6
    type: int
    restore_value: no
    initial_value: "160"

  - id: val_byte8
    type: int
    restore_value: no
    initial_value: "32"

  - id: val_byte13
    type: int
    restore_value: no
    initial_value: "5"

button:
  - platform: template
    name: "Send"
    on_press:
      - remote_transmitter.transmit_haier:
          code: !lambda |-
            return {static_cast<uint8_t>(id(val_byte1)), static_cast<uint8_t>(id(val_byte2)), static_cast<uint8_t>(id(val_byte3)), 0x00, static_cast<uint8_t>(id(val_byte5)), static_cast<uint8_t>(id(val_byte6)), 0x00, static_cast<uint8_t>(id(val_byte8)), 0x00, 0x00, 0x00, 0x00, static_cast<uint8_t>(id(val_byte13))};

  - platform: template
    name: "Code"
    id: code
    on_press:
      then:
        - lambda: |-
            if (id(val_byte1) == 166) {
              id(val_byte1) = 89;
            } else {
              id(val_byte1) = 166;
            }

switch:
  - platform: template
    name: "Power"
    id: power
    optimistic: true
    on_turn_on:
      then:
        - lambda: |-
            int value = id(val_byte5);
            id(val_byte5) = value + 64;

        - globals.set:
              id: val_byte13
              value: "5"

    on_turn_off:
      then:
        - lambda: |-
            int value = id(val_byte5);
            id(val_byte5) = value - 64;

        - globals.set:
              id: val_byte13
              value: "5"

number:
  - platform: template
    name: "Temperature"
    id: "temp"
    step: 1
    min_value: 0
    max_value: 14
    mode: slider
    optimistic: true
    on_value:
      then:
        - globals.set:
            id: val_byte2
            value: !lambda |-
              int last = id(val_byte2);
              int value1 = id(swing).state;
              int hex1 = (x * 16) + value1;

              if (last > hex1) {
                id(val_byte13) = 00;
              } else {
                id(val_byte13) = 01;
              }

              return hex1;

  - platform: template
    name: "Swing"
    id: "swing"
    step: 2
    min_value: 2
    max_value: 12
    mode: slider
    optimistic: true
    on_value:
      then:
        - globals.set:
            id: val_byte2
            value: !lambda |-
              int value2 = id(temp).state;
              int hex2 = (value2 * 16) + x;
              return hex2;

        - globals.set:
            id: val_byte13
            value: "2"

select:
  - platform: template
    name: "Speed"
    optimistic: true
    options:
      - Fan 1
      - Fan 2
      - Fan 3
      - Fan Auto
    initial_option: Fan Auto
    set_action:
      - globals.set:
              id: val_byte6
              value: !lambda |-
                int value6 = id(val_byte6);
                std::string option = x.c_str();

                if (option == "Fan 1") {
                  value6 = 96;
                } else if (option == "Fan 2") {
                  value6 =  64;
                } else if (option == "Fan 3") {
                  value6 =  32;
                } else if (option == "Fan Auto") {
                  value6 =  160;
                }

                return value6;

      - globals.set:
              id: val_byte13
              value: "4"

  - platform: template
    name: "Mode"
    optimistic: true
    options:
      - Fan
      - Cold
      - Hot
    initial_option: Cold
    set_action:
      - globals.set:
              id: val_byte8
              value: !lambda |-
                int value8 = id(val_byte8);
                std::string option = x.c_str();

                if (option == "Fan") {
                  value8 = 192;
                } else if (option == "Cold") {
                  value8 =  32;
                } else if (option == "Hot") {
                  value8 =  128;
                }

                return value8;

      - globals.set:
              id: val_byte13
              value: "6"

time:
  - platform: sntp
    on_time:
      - seconds: /1
        then:
          - globals.set:
              id: val_byte3
              value: !lambda |-
                int value3 = id(val_byte3);

                if (id(val_byte5)  == 64) {
                  value3 = (value3 + 1);
                }
                if (id(val_byte5)  == 128) {
                  value3 = (value3 + 1);
                }

                return value3;
          - globals.set:
              id: val_byte5
              value: !lambda |-
                int value5 = id(val_byte5);
                value5 = (value5 + 1);

                if (id(power).state) {
                  if (value5  == 128) {
                    value5 = 64;
                  }
                } else {
                  if (value5  == 64) {
                    value5 = 0;
                  }
                }

                return value5;
